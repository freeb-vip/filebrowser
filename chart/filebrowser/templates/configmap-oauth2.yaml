apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "filebrowser.fullname" . }}-oauth2
  labels:
    {{- include "filebrowser.labels" . | nindent 4 }}
data:
  oauth2-proxy.cfg: |
    ## OAuth2 Proxy Config File
    ## https://github.com/oauth2-proxy/oauth2-proxy

    ## <addr>:<port> to listen on for HTTP/HTTPS clients
    http_address = "0.0.0.0:{{ .Values.service.port }}"
    ## Are we running behind a reverse proxy? Will not accept headers like X-Real-Ip unless this is set.
    reverse_proxy = true

    ## the OAuth Redirect URL.
    # defaults to the "https://" + requested host header + "/oauth2/callback"
    # redirect_url = "https://internalapp.yourcompany.com/oauth2/callback"
    email_domains = "*"

    ## the http url(s) of the upstream endpoint. If multiple, routing is based on path
    upstreams = [
        "http://127.0.0.1:{{ .Values.service.inport }}"
    ]

    ## The OAuth Client ID, Secret
    client_id = "{{ .Values.oauth2.clientId }}"
    client_secret = "{{ .Values.oauth2.clientSecret }}"
    cookie_secret = "{{ .Values.oauth2.cookieSecret }}"
    provider = "{{ .Values.oauth2.provider }}"
    provider_display_name = "{{ .Values.oauth2.providerDisplayName }}"
    oidc_issuer_url = "{{ .Values.oauth2.oidcIssuerUrl }}"
    redirect_url = "{{ .Values.oauth2.redirectUrl }}/oauth2/callback"
    ##
    set_xauthrequest = true
    pass_access_token = true
    pass_authorization_header = true
    pass_user_headers = true
    show_debug_on_error = true
    cookie_secure = true

